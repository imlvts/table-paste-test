{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/rc-input-number.ts","webpack:///./src/page-ready.ts","webpack:///./src/index.tsx","webpack:///./src/shim.js","webpack:///./src/ExcelPaste.tsx","webpack:///./src/table-parser.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","rc_input_number_1","default","pageReady","Promise","resolve","isReady","doc","document","win","loaded","removeEventListener","readyState","addEventListener","React","ReactDOM","ExcelPaste_1","then","_","render","createElement","getElementById","require","String","trimRight","this","replace","trimLeft","Array","from","source","sources","excelPaste","ExcelPaste","_super","props","_this","changeValue","row","col","rows","state","setState","onChange","event","test","target","Number","dataset","acceptData","columns","map","val","__extends","componentDidMount","subscribe","_a","className","index","onChangeNumber","datum","data-row","data-col","type","RenderRow","Component","csvParse","numberRe","callback","options","stringCb","str","delimiter","trim","cols","colCount","every","guessColumns","IEclipboardData","ctrlKey","keyCode","text","getData","activeElement","tag","tagName","clipboardData","items","forEach","item","kind","getAsString"],"mappings":"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","file":"main.fc03cc6c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([71,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// wrapper to load css\r\nimport { default as InputNumber } from 'rc-input-number';\r\nimport 'rc-input-number/assets/index.css';\r\nexport default InputNumber;\r\n","// pageReady -- informs you when the page is ready.\r\n//\r\n// Interface:\r\n//   pageReady: Thenable<void>\r\n//\r\n// Usage:\r\n//   import { pageReady } from 'page-ready';\r\n//   pageReady.then(function () {\r\n//       console.log(\"the page is ready!\");\r\n//   });\r\n//\r\n\r\nexport let pageReady: Promise<void> = new Promise(function (resolve) {\r\n    let isReady = false;\r\n    let doc = document;\r\n    let win = window;\r\n    let loaded = function () {\r\n        if (isReady) {\r\n            return;\r\n        }\r\n        isReady = true;\r\n\r\n        doc.removeEventListener(\"DOMContentLoaded\", loaded, false);\r\n        win.removeEventListener(\"load\", loaded, false);\r\n\r\n        resolve(void 0);\r\n    };\r\n\r\n    if (doc.readyState === \"complete\") {\r\n        isReady = true;\r\n        resolve(void 0);\r\n    } else {\r\n        doc.addEventListener(\"DOMContentLoaded\", loaded, false);\r\n        win.addEventListener(\"load\", loaded, false);\r\n    }\r\n});\r\n\r\nexport default pageReady;\r\n","import './shim';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport ExcelPaste from './ExcelPaste';\nimport pageReady from './page-ready';\n\npageReady.then(_ => {\n  ReactDOM.render(\n    <ExcelPaste />,\n    document.getElementById('root') as HTMLElement\n  );\n});\n","require('./ie-hacks.css');\r\nrequire('object-assign-shim');\r\n\r\nif (!String.prototype.trimRight) {\r\n  String.prototype.trimRight = function() {\r\n    return this.replace(/\\s+$/);\r\n  };\r\n}\r\n\r\nif (!String.prototype.trimLeft) {\r\n  String.prototype.trimLeft = function() {\r\n    return this.replace(/^\\s+/);\r\n  };\r\n}\r\n\r\nif (!Array.from) {\r\n  Array.from = function(source) {\r\n    return Array.prototype.slice.call(sources);\r\n  };\r\n}\r\n\r\nif (!('Promise' in window)) {\r\n  window.Promise = require('bluebird');\r\n}\r\n","import * as React from 'react';\nimport './ExcelPaste.css';\nimport * as excelPaste from './table-parser';\nimport InputNumber from './rc-input-number';\nimport { ColumnKind } from './table-parser';\n\ntype ExcelPasteProps = {};\n\ntype ExcelPasteState = {\n    columns: Array<ColumnKind>,\n    rows: Array<Array<any>>,\n};\n\ntype InputEvent = React.FormEvent<HTMLInputElement>;\n\ntype RowProps = {\n  columns: Array<ColumnKind>,\n  data: Array<any>,\n  index: number,\n  onChange?: (event: InputEvent) => void,\n  onChangeNumber: (col: number, row: number, value: number) => void,\n};\n\nconst RenderRow = (props: RowProps) => {\n  const { columns, data, index, onChange, onChangeNumber } = props;\n  return (\n    <div key={index} className=\"table-row\">\n      {data.map((datum, i) =>\n        columns[i] === 'string'\n          ? <input\n                key={i} data-row={index} data-col={i} type=\"text\"\n                value={datum} onChange={onChange} />\n          : <InputNumber\n                key={i} value={datum}\n                onChange={(value: number) => onChangeNumber(index, i, value)} />\n      )}\n    </div>\n  )\n};\n\nconst numberRe = /^\\d+(?:\\.\\d*)?$|^\\.\\d+$/;\nexport class ExcelPaste extends React.Component<ExcelPasteProps, ExcelPasteState> {\n  constructor(props: ExcelPasteProps) {\n    super(props);\n    this.state = {\n      columns: [],\n      rows: [],\n    };\n  }\n\n  changeValue = (row: number, col: number, value: any) => {\n    let { rows } = this.state;\n    rows = rows.slice();\n    rows[row] = rows[row].slice();\n    rows[row][col] = value;\n    this.setState({rows});\n  };\n\n  onChange = (event: InputEvent, test?: any) => {\n    let target = event.target as HTMLInputElement;\n    let value = target.value;\n    let row = Number(target.dataset.row);\n    let col = Number(target.dataset.col);\n    this.changeValue(row, col, value);\n  };\n\n  acceptData = (columns: Array<ColumnKind>, rows: Array<Array<string>>) => {\n    // newlines to spaces\n    rows = rows.map((row) => row.map((val) => val.replace(/\\n/g, ' ')));\n\n    this.setState({columns, rows});\n  };\n\n  componentDidMount() {\n    excelPaste.subscribe(this.acceptData, {});\n  }\n\n  render() {\n    const { columns, rows } = this.state;\n    if (columns.length === 0 || rows.length === 0) {\n      return (\n        <div className=\"empty-table-text\">\n          Copy-Paste Excel table to this window to check the component\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"excel-table-rows\">\n          {rows.map((data, index) =>\n            RenderRow({\n              columns, data, index,\n              onChange: this.onChange,\n              onChangeNumber: this.changeValue\n            }))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default ExcelPaste;\n","import * as csvParse from 'csv-parse/lib/sync';\r\n\r\n/**\r\n * Derives column types from provided array of rows.\r\n * TODO: assumes every row has the same number of columns.\r\n *\r\n * @param rows -- array of rows.\r\n * @return array of type columns\r\n */\r\n\r\ntype Rows = Array<Array<string>>;\r\nexport type ColumnKind = 'number' | 'string';\r\n\r\nconst numberRe = /^\\d+(?:\\.\\d*)?$|^\\.\\d+$/;\r\n\r\nconst guessColumns = (rows: Rows): Array<ColumnKind> => {\r\n  if (rows.length === 0) {\r\n    return [];\r\n  }\r\n  const colCount = rows[0].length;\r\n  let columns: Array<ColumnKind> = [];\r\n  for (let i = 0; i < colCount; i++) {\r\n    if (rows.every((row => !row[i] || numberRe.test(row[i])))) {\r\n      columns.push('number');\r\n    } else {\r\n      columns.push('string');\r\n    }\r\n  }\r\n  return columns;\r\n};\r\n\r\n/**\r\n * Subscribes to paste events, processess them\r\n * and calls the callback with parsed result.\r\n *\r\n * TODO: add unsubscribe\r\n *\r\n * @param callback -- this callback will be called with\r\n * array of derived column types and an array of rows\r\n * @param options -- unused\r\n */\r\ntype PasteOptions = {};\r\nexport const subscribe = (callback: (columns: Array<ColumnKind>, rows: Rows) => void, options?: PasteOptions) => {\r\n  const pasteListener = (event: ClipboardEvent) => {\r\n    // ignore paste events if there is an active input element\r\n    const activeElement = document.activeElement as Element;\r\n    const tag = activeElement && activeElement.tagName;\r\n    if (tag === 'INPUT' || tag === 'TEXTAREA') { return; }\r\n\r\n    const items = Array.from(event.clipboardData.items);\r\n    items.forEach((item: DataTransferItem) => {\r\n      if (item.kind === 'string' && /^text\\/plain/.test(item.type)) {\r\n        item.getAsString(stringCb);\r\n      }\r\n    });\r\n  };\r\n\r\n  const stringCb = (str: string) => {\r\n    const rows = csvParse(str, {delimiter: '\\t', columns: false, trim: true});\r\n    const cols = guessColumns(rows);\r\n    callback(cols, rows);\r\n  };\r\n\r\n  let IEclipboardData = (window as any)['clipboardData'];\r\n  if (IEclipboardData) {\r\n    // TODO: do not paste twice\r\n    window.addEventListener('keypress', (event: KeyboardEvent) => {\r\n      if (!event.ctrlKey || event.keyCode !== 22) { return; }\r\n      let text = IEclipboardData.getData('Text');\r\n      stringCb(text);\r\n    });\r\n  }\r\n  window.addEventListener('paste', pasteListener);\r\n};\r\n"],"sourceRoot":""}